### Starting build.
# Target: german.ml.depends, tags: { bin_annot, debug, extension:ml, file:german.ml, ocaml, ocamldep, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamldep -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -modules german.ml > german.ml.depends
# Target: src/cmdline.mli.depends, tags: { bin_annot, debug, extension:mli, file:src/cmdline.mli, ocaml, ocamldep, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamldep -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -modules src/cmdline.mli > src/cmdline.mli.depends # cached
# Target: src/cmdline.cmi, tags: { bin_annot, byte, compile, debug, extension:mli, file:src/cmdline.mli, interf, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o src/cmdline.cmi src/cmdline.mli # cached
# Target: src/formula.mli.depends, tags: { bin_annot, debug, extension:mli, file:src/formula.mli, ocaml, ocamldep, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamldep -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -modules src/formula.mli > src/formula.mli.depends # cached
# Target: src/paramecium.mli.depends, tags: { bin_annot, debug, extension:mli, file:src/paramecium.mli, ocaml, ocamldep, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamldep -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -modules src/paramecium.mli > src/paramecium.mli.depends # cached
# Target: src/paramecium.cmi, tags: { bin_annot, byte, compile, debug, extension:mli, file:src/paramecium.mli, interf, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o src/paramecium.cmi src/paramecium.mli # cached
# Target: src/formula.cmi, tags: { bin_annot, byte, compile, debug, extension:mli, file:src/formula.mli, interf, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o src/formula.cmi src/formula.mli # cached
# Target: src/invFinder.mli.depends, tags: { bin_annot, debug, extension:mli, file:src/invFinder.mli, ocaml, ocamldep, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamldep -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -modules src/invFinder.mli > src/invFinder.mli.depends # cached
# Target: src/loach.mli.depends, tags: { bin_annot, debug, extension:mli, file:src/loach.mli, ocaml, ocamldep, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamldep -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -modules src/loach.mli > src/loach.mli.depends # cached
# Target: src/loach.cmi, tags: { bin_annot, byte, compile, debug, extension:mli, file:src/loach.mli, interf, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o src/loach.cmi src/loach.mli # cached
# Target: src/invFinder.cmi, tags: { bin_annot, byte, compile, debug, extension:mli, file:src/invFinder.mli, interf, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o src/invFinder.cmi src/invFinder.mli # cached
# Target: src/isabelle.mli.depends, tags: { bin_annot, debug, extension:mli, file:src/isabelle.mli, ocaml, ocamldep, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamldep -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -modules src/isabelle.mli > src/isabelle.mli.depends
# Target: src/utils.mli.depends, tags: { bin_annot, debug, extension:mli, file:src/utils.mli, ocaml, ocamldep, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamldep -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -modules src/utils.mli > src/utils.mli.depends # cached
# Target: src/utils.cmi, tags: { bin_annot, byte, compile, debug, extension:mli, file:src/utils.mli, interf, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o src/utils.cmi src/utils.mli # cached
# Target: src/isabelle.cmi, tags: { bin_annot, byte, compile, debug, extension:mli, file:src/isabelle.mli, interf, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o src/isabelle.cmi src/isabelle.mli
# Target: german.cmo, tags: { bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:german.cmo, file:german.ml, implem, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o german.cmo german.ml
+ ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o german.cmo german.ml
File "german.ml", line 5, characters 0-10:
Warning 45: this open statement shadows the label name (which is later used)
File "german.ml", line 5, characters 0-10:
Warning 45: this open statement shadows the label types (which is later used)
File "german.ml", line 5, characters 0-10:
Warning 45: this open statement shadows the label vardefs (which is later used)
File "german.ml", line 5, characters 0-10:
Warning 45: this open statement shadows the label init (which is later used)
File "german.ml", line 5, characters 0-10:
Warning 45: this open statement shadows the label rules (which is later used)
File "german.ml", line 5, characters 0-10:
Warning 45: this open statement shadows the label properties (which is later used)
# Target: src/cmdline.ml.depends, tags: { bin_annot, debug, extension:ml, file:src/cmdline.ml, ocaml, ocamldep, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamldep -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -modules src/cmdline.ml > src/cmdline.ml.depends # cached
# Target: src/client.mli.depends, tags: { bin_annot, debug, extension:mli, file:src/client.mli, ocaml, ocamldep, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamldep -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -modules src/client.mli > src/client.mli.depends # cached
# Target: src/client.cmi, tags: { bin_annot, byte, compile, debug, extension:mli, file:src/client.mli, interf, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o src/client.cmi src/client.mli # cached
# Target: src/murphi.mli.depends, tags: { bin_annot, debug, extension:mli, file:src/murphi.mli, ocaml, ocamldep, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamldep -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -modules src/murphi.mli > src/murphi.mli.depends # cached
# Target: src/murphi.cmi, tags: { bin_annot, byte, compile, debug, extension:mli, file:src/murphi.mli, interf, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o src/murphi.cmi src/murphi.mli # cached
# Target: src/smv.mli.depends, tags: { bin_annot, debug, extension:mli, file:src/smv.mli, ocaml, ocamldep, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamldep -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -modules src/smv.mli > src/smv.mli.depends # cached
# Target: src/smv.cmi, tags: { bin_annot, byte, compile, debug, extension:mli, file:src/smv.mli, interf, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o src/smv.cmi src/smv.mli # cached
# Target: src/cmdline.cmo, tags: { bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:src/cmdline.cmo, file:src/cmdline.ml, implem, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o src/cmdline.cmo src/cmdline.ml # cached
# Target: src/formula.ml.depends, tags: { bin_annot, debug, extension:ml, file:src/formula.ml, ocaml, ocamldep, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamldep -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -modules src/formula.ml > src/formula.ml.depends # cached
# Target: src/generalize.mli.depends, tags: { bin_annot, debug, extension:mli, file:src/generalize.mli, ocaml, ocamldep, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamldep -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -modules src/generalize.mli > src/generalize.mli.depends # cached
# Target: src/generalize.cmi, tags: { bin_annot, byte, compile, debug, extension:mli, file:src/generalize.mli, interf, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o src/generalize.cmi src/generalize.mli # cached
# Target: src/smt.mli.depends, tags: { bin_annot, debug, extension:mli, file:src/smt.mli, ocaml, ocamldep, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamldep -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -modules src/smt.mli > src/smt.mli.depends # cached
# Target: src/smt.cmi, tags: { bin_annot, byte, compile, debug, extension:mli, file:src/smt.mli, interf, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o src/smt.cmi src/smt.mli # cached
# Target: src/toStr.mli.depends, tags: { bin_annot, debug, extension:mli, file:src/toStr.mli, ocaml, ocamldep, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamldep -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -modules src/toStr.mli > src/toStr.mli.depends # cached
# Target: src/toStr.cmi, tags: { bin_annot, byte, compile, debug, extension:mli, file:src/toStr.mli, interf, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o src/toStr.cmi src/toStr.mli # cached
# Target: src/formula.cmo, tags: { bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:src/formula.cmo, file:src/formula.ml, implem, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o src/formula.cmo src/formula.ml # cached
# Target: src/invFinder.ml.depends, tags: { bin_annot, debug, extension:ml, file:src/invFinder.ml, ocaml, ocamldep, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamldep -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -modules src/invFinder.ml > src/invFinder.ml.depends # cached
# Target: src/invFinder.cmo, tags: { bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:src/invFinder.cmo, file:src/invFinder.ml, implem, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o src/invFinder.cmo src/invFinder.ml # cached
# Target: src/isabelle.ml.depends, tags: { bin_annot, debug, extension:ml, file:src/isabelle.ml, ocaml, ocamldep, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamldep -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -modules src/isabelle.ml > src/isabelle.ml.depends
# Target: src/isa_base.mli.depends, tags: { bin_annot, debug, extension:mli, file:src/isa_base.mli, ocaml, ocamldep, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamldep -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -modules src/isa_base.mli > src/isa_base.mli.depends # cached
# Target: src/isa_base.cmi, tags: { bin_annot, byte, compile, debug, extension:mli, file:src/isa_base.mli, interf, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o src/isa_base.cmi src/isa_base.mli # cached
# Target: src/loach.ml.depends, tags: { bin_annot, debug, extension:ml, file:src/loach.ml, ocaml, ocamldep, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamldep -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -modules src/loach.ml > src/loach.ml.depends # cached
# Target: src/loach.cmo, tags: { bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:src/loach.cmo, file:src/loach.ml, implem, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o src/loach.cmo src/loach.ml # cached
# Target: src/paramecium.ml.depends, tags: { bin_annot, debug, extension:ml, file:src/paramecium.ml, ocaml, ocamldep, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamldep -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -modules src/paramecium.ml > src/paramecium.ml.depends # cached
# Target: src/paramecium.cmo, tags: { bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:src/paramecium.cmo, file:src/paramecium.ml, implem, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o src/paramecium.cmo src/paramecium.ml # cached
# Target: src/utils.ml.depends, tags: { bin_annot, debug, extension:ml, file:src/utils.ml, ocaml, ocamldep, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamldep -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -modules src/utils.ml > src/utils.ml.depends # cached
# Target: src/utils.cmo, tags: { bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:src/utils.cmo, file:src/utils.ml, implem, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o src/utils.cmo src/utils.ml # cached
# Target: src/isabelle.cmo, tags: { bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:src/isabelle.cmo, file:src/isabelle.ml, implem, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o src/isabelle.cmo src/isabelle.ml
+ ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o src/isabelle.cmo src/isabelle.ml
File "src/isabelle.ml", line 26, characters 55-88:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
Paramref _
File "src/isabelle.ml", line 28, characters 49-79:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
Paramref _
File "src/isabelle.ml", line 30, characters 65-125:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
Paramref _
File "src/isabelle.ml", line 34, characters 64-123:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
Paramref _
File "src/isabelle.ml", line 24, characters 44-619:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
Paramref _
File "src/isabelle.ml", line 50, characters 8-26:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
Paramref _
File "src/isabelle.ml", line 56, characters 10-28:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
Paramref _
File "src/isabelle.ml", line 60, characters 10-50:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(Paramref _, _)
File "src/isabelle.ml", line 59, characters 39-142:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
[]
File "src/isabelle.ml", line 65, characters 26-52:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
Paramref _
File "src/isabelle.ml", line 85, characters 39-136:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
[]
File "src/isabelle.ml", line 9, characters 0-10:
Warning 45: this open statement shadows the constructor Const (which is later used)
File "src/isabelle.ml", line 9, characters 0-10:
Warning 45: this open statement shadows the constructor Var (which is later used)
File "src/isabelle.ml", line 9, characters 0-10:
Warning 45: this open statement shadows the constructor Param (which is later used)
File "src/isabelle.ml", line 9, characters 0-10:
Warning 45: this open statement shadows the constructor Ite (which is later used)
File "src/isabelle.ml", line 9, characters 0-10:
Warning 45: this open statement shadows the constructor UIF (which is later used)
File "src/isabelle.ml", line 9, characters 0-10:
Warning 45: this open statement shadows the constructor Chaos (which is later used)
File "src/isabelle.ml", line 9, characters 0-10:
Warning 45: this open statement shadows the constructor Miracle (which is later used)
File "src/isabelle.ml", line 9, characters 0-10:
Warning 45: this open statement shadows the constructor UIP (which is later used)
File "src/isabelle.ml", line 9, characters 0-10:
Warning 45: this open statement shadows the constructor Eqn (which is later used)
File "src/isabelle.ml", line 9, characters 0-10:
Warning 45: this open statement shadows the constructor Neg (which is later used)
File "src/isabelle.ml", line 9, characters 0-10:
Warning 45: this open statement shadows the constructor AndList (which is later used)
File "src/isabelle.ml", line 9, characters 0-10:
Warning 45: this open statement shadows the constructor OrList (which is later used)
File "src/isabelle.ml", line 9, characters 0-10:
Warning 45: this open statement shadows the constructor Imply (which is later used)
File "src/isabelle.ml", line 9, characters 0-10:
Warning 45: this open statement shadows the constructor ForallFormula (which is later used)
File "src/isabelle.ml", line 9, characters 0-10:
Warning 45: this open statement shadows the constructor ExistFormula (which is later used)
File "src/isabelle.ml", line 9, characters 0-10:
Warning 45: this open statement shadows the constructor Parallel (which is later used)
File "src/isabelle.ml", line 227, characters 6-26:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(Assign (_, _)|IfStatement (_, _)|IfelseStatement (_, _, _)|
ForStatement (_, _))
File "src/isabelle.ml", line 9, characters 0-10:
Warning 45: this open statement shadows the constructor Assign (which is later used)
File "src/isabelle.ml", line 9, characters 0-10:
Warning 45: this open statement shadows the constructor Rule (which is later used)
File "src/isabelle.ml", line 275, characters 2-212:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
UIF (_, _)
File "src/isabelle.ml", line 282, characters 2-487:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(UIP (_, _)|ForallFormula (_, _)|ExistFormula (_, _))
File "src/isabelle.ml", line 294, characters 44-77:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
Paramref _
File "src/isabelle.ml", line 297, characters 59-92:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
Paramref _
File "src/isabelle.ml", line 297, characters 10-30:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
Paramref _
File "src/isabelle.ml", line 303, characters 49-82:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
Paramref _
File "src/isabelle.ml", line 419, characters 4-561:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(ForallFormula (_, _)|ExistFormula (_, _))
File "src/isabelle.ml", line 473, characters 10-35:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
AllRuleInst _
File "src/isabelle.ml", line 478, characters 47-91:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
Paramref _
File "src/isabelle.ml", line 477, characters 47-164:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
Paramref _
File "src/isabelle.ml", line 481, characters 69-129:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
Paramref _
File "src/isabelle.ml", line 480, characters 81-247:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
Paramref _
File "src/isabelle.ml", line 518, characters 9-44:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
[]
File "src/isabelle.ml", line 541, characters 10-30:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
AllRuleInst _
File "src/isabelle.ml", line 840, characters 2-23:
Warning 6: labels were omitted in the application of this function.
File "src/isabelle.ml", line 847, characters 10-96:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
[]
File "src/isabelle.ml", line 865, characters 6-27:
Warning 6: labels were omitted in the application of this function.
File "src/isabelle.ml", line 890, characters 6-27:
Warning 6: labels were omitted in the application of this function.
File "src/isabelle.ml", line 913, characters 2-23:
Warning 6: labels were omitted in the application of this function.
File "src/isabelle.ml", line 929, characters 2-23:
Warning 6: labels were omitted in the application of this function.
File "src/isabelle.ml", line 945, characters 2-23:
Warning 6: labels were omitted in the application of this function.
File "src/isabelle.ml", line 961, characters 2-23:
Warning 6: labels were omitted in the application of this function.
File "src/isabelle.ml", line 1000, characters 2-23:
Warning 6: labels were omitted in the application of this function.
File "src/isabelle.ml", line 1024, characters 2-23:
Warning 6: labels were omitted in the application of this function.
File "src/isabelle.ml", line 9, characters 0-10:
Warning 45: this open statement shadows the label name (which is later used)
File "src/isabelle.ml", line 9, characters 0-10:
Warning 45: this open statement shadows the label types (which is later used)
File "src/isabelle.ml", line 9, characters 0-10:
Warning 45: this open statement shadows the label vardefs (which is later used)
File "src/isabelle.ml", line 9, characters 0-10:
Warning 45: this open statement shadows the label init (which is later used)
File "src/isabelle.ml", line 9, characters 0-10:
Warning 45: this open statement shadows the label rules (which is later used)
File "src/isabelle.ml", line 9, characters 0-10:
Warning 45: this open statement shadows the label properties (which is later used)
File "src/isabelle.ml", line 1037, characters 2-23:
Warning 6: labels were omitted in the application of this function.
File "src/isabelle.ml", line 112, characters 4-16:
Warning 32: unused value gen_tmp_vars.
File "src/isabelle.ml", line 129, characters 9-10:
Warning 27: unused variable i.
File "src/isabelle.ml", line 137, characters 19-23:
Warning 27: unused variable name.
File "src/isabelle.ml", line 210, characters 24-29:
Warning 27: unused variable tname.
File "src/isabelle.ml", line 220, characters 24-29:
Warning 27: unused variable tname.
File "src/isabelle.ml", line 237, characters 14-24:
Warning 26: unused variable type_range.
File "src/isabelle.ml", line 349, characters 14-24:
Warning 26: unused variable type_range.
File "src/isabelle.ml", line 359, characters 14-24:
Warning 26: unused variable type_range.
File "src/isabelle.ml", line 418, characters 10-18:
Warning 32: unused value form_act.
File "src/isabelle.ml", line 1034, characters 31-38:
Warning 27: unused variable vardefs.
File "src/isabelle.ml", line 1034, characters 53-63:
Warning 27: unused variable properties.
# Target: src/client.ml.depends, tags: { bin_annot, debug, extension:ml, file:src/client.ml, ocaml, ocamldep, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamldep -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -modules src/client.ml > src/client.ml.depends # cached
# Target: src/client.cmo, tags: { bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:src/client.cmo, file:src/client.ml, implem, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o src/client.cmo src/client.ml # cached
# Target: src/murphi.ml.depends, tags: { bin_annot, debug, extension:ml, file:src/murphi.ml, ocaml, ocamldep, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamldep -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -modules src/murphi.ml > src/murphi.ml.depends # cached
# Target: src/murphi.cmo, tags: { bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:src/murphi.cmo, file:src/murphi.ml, implem, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o src/murphi.cmo src/murphi.ml # cached
# Target: src/smv.ml.depends, tags: { bin_annot, debug, extension:ml, file:src/smv.ml, ocaml, ocamldep, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamldep -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -modules src/smv.ml > src/smv.ml.depends # cached
# Target: src/smv.cmo, tags: { bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:src/smv.cmo, file:src/smv.ml, implem, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o src/smv.cmo src/smv.ml # cached
# Target: src/generalize.ml.depends, tags: { bin_annot, debug, extension:ml, file:src/generalize.ml, ocaml, ocamldep, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamldep -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -modules src/generalize.ml > src/generalize.ml.depends # cached
# Target: src/generalize.cmo, tags: { bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:src/generalize.cmo, file:src/generalize.ml, implem, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o src/generalize.cmo src/generalize.ml # cached
# Target: src/smt.ml.depends, tags: { bin_annot, debug, extension:ml, file:src/smt.ml, ocaml, ocamldep, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamldep -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -modules src/smt.ml > src/smt.ml.depends # cached
# Target: src/smt.cmo, tags: { bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:src/smt.cmo, file:src/smt.ml, implem, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o src/smt.cmo src/smt.ml # cached
# Target: src/toStr.ml.depends, tags: { bin_annot, debug, extension:ml, file:src/toStr.ml, ocaml, ocamldep, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamldep -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -modules src/toStr.ml > src/toStr.ml.depends # cached
# Target: src/toStr.cmo, tags: { bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:src/toStr.cmo, file:src/toStr.ml, implem, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o src/toStr.cmo src/toStr.ml # cached
# Target: src/isa_base.ml.depends, tags: { bin_annot, debug, extension:ml, file:src/isa_base.ml, ocaml, ocamldep, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamldep -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -modules src/isa_base.ml > src/isa_base.ml.depends # cached
# Target: src/isa_base.cmo, tags: { bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:src/isa_base.cmo, file:src/isa_base.ml, implem, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core -I src -o src/isa_base.cmo src/isa_base.ml # cached
# Target: german.byte, tags: { bin_annot, byte, debug, dont_link_with, extension:byte, file:german.byte, link, ocaml, package(bin_prot.syntax), package(core), package(sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), package(str,re2), program, quiet, short_paths, syntax(camlp4o), thread }
ocamlfind ocamlc -linkpkg -g -thread -syntax camlp4o -package str,re2 -package bin_prot.syntax -package sexplib.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -package core src/utils.cmo src/client.cmo src/murphi.cmo src/smv.cmo src/cmdline.cmo src/paramecium.cmo src/toStr.cmo src/generalize.cmo src/smt.cmo src/formula.cmo src/loach.cmo src/invFinder.cmo src/isa_base.cmo src/isabelle.cmo german.cmo -o german.byte
# Compilation successful.
